// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package addservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConcatRequest struct {
	A                    string   `protobuf:"bytes,1,opt,name=A,proto3" json:"A,omitempty"`
	B                    string   `protobuf:"bytes,2,opt,name=B,proto3" json:"B,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConcatRequest) Reset()         { *m = ConcatRequest{} }
func (m *ConcatRequest) String() string { return proto.CompactTextString(m) }
func (*ConcatRequest) ProtoMessage()    {}
func (*ConcatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{0}
}
func (m *ConcatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcatRequest.Unmarshal(m, b)
}
func (m *ConcatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcatRequest.Marshal(b, m, deterministic)
}
func (dst *ConcatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcatRequest.Merge(dst, src)
}
func (m *ConcatRequest) XXX_Size() int {
	return xxx_messageInfo_ConcatRequest.Size(m)
}
func (m *ConcatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConcatRequest proto.InternalMessageInfo

func (m *ConcatRequest) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

func (m *ConcatRequest) GetB() string {
	if m != nil {
		return m.B
	}
	return ""
}

type ConcatResponse struct {
	Code                 int64    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConcatResponse) Reset()         { *m = ConcatResponse{} }
func (m *ConcatResponse) String() string { return proto.CompactTextString(m) }
func (*ConcatResponse) ProtoMessage()    {}
func (*ConcatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{1}
}
func (m *ConcatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcatResponse.Unmarshal(m, b)
}
func (m *ConcatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcatResponse.Marshal(b, m, deterministic)
}
func (dst *ConcatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcatResponse.Merge(dst, src)
}
func (m *ConcatResponse) XXX_Size() int {
	return xxx_messageInfo_ConcatResponse.Size(m)
}
func (m *ConcatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConcatResponse proto.InternalMessageInfo

func (m *ConcatResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ConcatResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ConcatResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Foo struct {
	Name                 string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Age                  int64             `protobuf:"varint,2,opt,name=Age,proto3" json:"Age,omitempty"`
	F32                  float32           `protobuf:"fixed32,3,opt,name=F32,proto3" json:"F32,omitempty"`
	F64                  float64           `protobuf:"fixed64,4,opt,name=F64,proto3" json:"F64,omitempty"`
	UI32                 uint32            `protobuf:"varint,5,opt,name=UI32,proto3" json:"UI32,omitempty"`
	UI64                 uint64            `protobuf:"varint,6,opt,name=UI64,proto3" json:"UI64,omitempty"`
	B                    bool              `protobuf:"varint,7,opt,name=B,proto3" json:"B,omitempty"`
	StarInt              int64             `protobuf:"varint,8,opt,name=StarInt,proto3" json:"StarInt,omitempty"`
	StarFoo              *Foo              `protobuf:"bytes,9,opt,name=StarFoo,proto3" json:"StarFoo,omitempty"`
	StarFoo2             *Foo2             `protobuf:"bytes,10,opt,name=StarFoo2,proto3" json:"StarFoo2,omitempty"`
	Bytes                []byte            `protobuf:"bytes,11,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
	Strs                 []string          `protobuf:"bytes,12,rep,name=Strs,proto3" json:"Strs,omitempty"`
	Ints                 []int64           `protobuf:"varint,13,rep,packed,name=Ints,proto3" json:"Ints,omitempty"`
	Int64S               []int64           `protobuf:"varint,14,rep,packed,name=Int64S,proto3" json:"Int64S,omitempty"`
	F32S                 []float32         `protobuf:"fixed32,15,rep,packed,name=F32S,proto3" json:"F32S,omitempty"`
	F64S                 []float64         `protobuf:"fixed64,16,rep,packed,name=F64S,proto3" json:"F64S,omitempty"`
	Foos                 []*Foo            `protobuf:"bytes,17,rep,name=Foos,proto3" json:"Foos,omitempty"`
	StarFoos             []*Foo            `protobuf:"bytes,18,rep,name=StarFoos,proto3" json:"StarFoos,omitempty"`
	Foos2                []*Foo2           `protobuf:"bytes,19,rep,name=Foos2,proto3" json:"Foos2,omitempty"`
	StarFoos2            []*Foo2           `protobuf:"bytes,20,rep,name=StarFoos2,proto3" json:"StarFoos2,omitempty"`
	MS2I                 map[string]int64  `protobuf:"bytes,21,rep,name=MS2I,proto3" json:"MS2I,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MS2I32               map[string]int32  `protobuf:"bytes,22,rep,name=MS2I32,proto3" json:"MS2I32,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MS2I64               map[string]int64  `protobuf:"bytes,23,rep,name=MS2I64,proto3" json:"MS2I64,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MS2UI32              map[string]uint32 `protobuf:"bytes,24,rep,name=MS2UI32,proto3" json:"MS2UI32,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MS2UI64              map[string]uint64 `protobuf:"bytes,25,rep,name=MS2UI64,proto3" json:"MS2UI64,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MI2I                 map[int64]int64   `protobuf:"bytes,26,rep,name=MI2I,proto3" json:"MI2I,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MS2ST                map[string]*Foo   `protobuf:"bytes,27,rep,name=MS2ST,proto3" json:"MS2ST,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MS2ST2               map[string]*Foo2  `protobuf:"bytes,28,rep,name=MS2ST2,proto3" json:"MS2ST2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MS2StarST            map[string]*Foo   `protobuf:"bytes,29,rep,name=MS2StarST,proto3" json:"MS2StarST,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MS2StarST2           map[string]*Foo2  `protobuf:"bytes,30,rep,name=MS2StarST2,proto3" json:"MS2StarST2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Foo) Reset()         { *m = Foo{} }
func (m *Foo) String() string { return proto.CompactTextString(m) }
func (*Foo) ProtoMessage()    {}
func (*Foo) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{2}
}
func (m *Foo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foo.Unmarshal(m, b)
}
func (m *Foo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foo.Marshal(b, m, deterministic)
}
func (dst *Foo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foo.Merge(dst, src)
}
func (m *Foo) XXX_Size() int {
	return xxx_messageInfo_Foo.Size(m)
}
func (m *Foo) XXX_DiscardUnknown() {
	xxx_messageInfo_Foo.DiscardUnknown(m)
}

var xxx_messageInfo_Foo proto.InternalMessageInfo

func (m *Foo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Foo) GetAge() int64 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Foo) GetF32() float32 {
	if m != nil {
		return m.F32
	}
	return 0
}

func (m *Foo) GetF64() float64 {
	if m != nil {
		return m.F64
	}
	return 0
}

func (m *Foo) GetUI32() uint32 {
	if m != nil {
		return m.UI32
	}
	return 0
}

func (m *Foo) GetUI64() uint64 {
	if m != nil {
		return m.UI64
	}
	return 0
}

func (m *Foo) GetB() bool {
	if m != nil {
		return m.B
	}
	return false
}

func (m *Foo) GetStarInt() int64 {
	if m != nil {
		return m.StarInt
	}
	return 0
}

func (m *Foo) GetStarFoo() *Foo {
	if m != nil {
		return m.StarFoo
	}
	return nil
}

func (m *Foo) GetStarFoo2() *Foo2 {
	if m != nil {
		return m.StarFoo2
	}
	return nil
}

func (m *Foo) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *Foo) GetStrs() []string {
	if m != nil {
		return m.Strs
	}
	return nil
}

func (m *Foo) GetInts() []int64 {
	if m != nil {
		return m.Ints
	}
	return nil
}

func (m *Foo) GetInt64S() []int64 {
	if m != nil {
		return m.Int64S
	}
	return nil
}

func (m *Foo) GetF32S() []float32 {
	if m != nil {
		return m.F32S
	}
	return nil
}

func (m *Foo) GetF64S() []float64 {
	if m != nil {
		return m.F64S
	}
	return nil
}

func (m *Foo) GetFoos() []*Foo {
	if m != nil {
		return m.Foos
	}
	return nil
}

func (m *Foo) GetStarFoos() []*Foo {
	if m != nil {
		return m.StarFoos
	}
	return nil
}

func (m *Foo) GetFoos2() []*Foo2 {
	if m != nil {
		return m.Foos2
	}
	return nil
}

func (m *Foo) GetStarFoos2() []*Foo2 {
	if m != nil {
		return m.StarFoos2
	}
	return nil
}

func (m *Foo) GetMS2I() map[string]int64 {
	if m != nil {
		return m.MS2I
	}
	return nil
}

func (m *Foo) GetMS2I32() map[string]int32 {
	if m != nil {
		return m.MS2I32
	}
	return nil
}

func (m *Foo) GetMS2I64() map[string]int64 {
	if m != nil {
		return m.MS2I64
	}
	return nil
}

func (m *Foo) GetMS2UI32() map[string]uint32 {
	if m != nil {
		return m.MS2UI32
	}
	return nil
}

func (m *Foo) GetMS2UI64() map[string]uint64 {
	if m != nil {
		return m.MS2UI64
	}
	return nil
}

func (m *Foo) GetMI2I() map[int64]int64 {
	if m != nil {
		return m.MI2I
	}
	return nil
}

func (m *Foo) GetMS2ST() map[string]*Foo {
	if m != nil {
		return m.MS2ST
	}
	return nil
}

func (m *Foo) GetMS2ST2() map[string]*Foo2 {
	if m != nil {
		return m.MS2ST2
	}
	return nil
}

func (m *Foo) GetMS2StarST() map[string]*Foo {
	if m != nil {
		return m.MS2StarST
	}
	return nil
}

func (m *Foo) GetMS2StarST2() map[string]*Foo2 {
	if m != nil {
		return m.MS2StarST2
	}
	return nil
}

type Foo2 struct {
	A                    string   `protobuf:"bytes,1,opt,name=A,proto3" json:"A,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=B,proto3" json:"B,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Foo2) Reset()         { *m = Foo2{} }
func (m *Foo2) String() string { return proto.CompactTextString(m) }
func (*Foo2) ProtoMessage()    {}
func (*Foo2) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{3}
}
func (m *Foo2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foo2.Unmarshal(m, b)
}
func (m *Foo2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foo2.Marshal(b, m, deterministic)
}
func (dst *Foo2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foo2.Merge(dst, src)
}
func (m *Foo2) XXX_Size() int {
	return xxx_messageInfo_Foo2.Size(m)
}
func (m *Foo2) XXX_DiscardUnknown() {
	xxx_messageInfo_Foo2.DiscardUnknown(m)
}

var xxx_messageInfo_Foo2 proto.InternalMessageInfo

func (m *Foo2) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

func (m *Foo2) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type Response struct {
	Code                 int64    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{4}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SumRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=A,proto3" json:"A,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=B,proto3" json:"B,omitempty"`
	F                    *Foo2    `protobuf:"bytes,3,opt,name=F,proto3" json:"F,omitempty"`
	Cc                   int32    `protobuf:"varint,4,opt,name=Cc,proto3" json:"Cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{5}
}
func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (dst *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(dst, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SumRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

func (m *SumRequest) GetF() *Foo2 {
	if m != nil {
		return m.F
	}
	return nil
}

func (m *SumRequest) GetCc() int32 {
	if m != nil {
		return m.Cc
	}
	return 0
}

type SumResponse struct {
	Code                 int64    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 int64    `protobuf:"varint,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{6}
}
func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (dst *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(dst, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SumResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SumResponse) GetData() int64 {
	if m != nil {
		return m.Data
	}
	return 0
}

type TestRequest struct {
	A                    string   `protobuf:"bytes,1,opt,name=A,proto3" json:"A,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=B,proto3" json:"B,omitempty"`
	F                    *Foo     `protobuf:"bytes,3,opt,name=F,proto3" json:"F,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_3bdd0f9ca33228e5, []int{7}
}
func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (dst *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(dst, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

func (m *TestRequest) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

func (m *TestRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

func (m *TestRequest) GetF() *Foo {
	if m != nil {
		return m.F
	}
	return nil
}

func init() {
	proto.RegisterType((*ConcatRequest)(nil), "addservice.ConcatRequest")
	proto.RegisterType((*ConcatResponse)(nil), "addservice.ConcatResponse")
	proto.RegisterType((*Foo)(nil), "addservice.Foo")
	proto.RegisterMapType((map[int64]int64)(nil), "addservice.Foo.MI2IEntry")
	proto.RegisterMapType((map[string]int32)(nil), "addservice.Foo.MS2I32Entry")
	proto.RegisterMapType((map[string]int64)(nil), "addservice.Foo.MS2I64Entry")
	proto.RegisterMapType((map[string]int64)(nil), "addservice.Foo.MS2IEntry")
	proto.RegisterMapType((map[string]*Foo2)(nil), "addservice.Foo.MS2ST2Entry")
	proto.RegisterMapType((map[string]*Foo)(nil), "addservice.Foo.MS2STEntry")
	proto.RegisterMapType((map[string]*Foo2)(nil), "addservice.Foo.MS2StarST2Entry")
	proto.RegisterMapType((map[string]*Foo)(nil), "addservice.Foo.MS2StarSTEntry")
	proto.RegisterMapType((map[string]uint32)(nil), "addservice.Foo.MS2UI32Entry")
	proto.RegisterMapType((map[string]uint64)(nil), "addservice.Foo.MS2UI64Entry")
	proto.RegisterType((*Foo2)(nil), "addservice.Foo2")
	proto.RegisterType((*Response)(nil), "addservice.Response")
	proto.RegisterType((*SumRequest)(nil), "addservice.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "addservice.SumResponse")
	proto.RegisterType((*TestRequest)(nil), "addservice.TestRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClientClient is the client API for ServiceClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClientClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Concat(ctx context.Context, in *ConcatRequest, opts ...grpc.CallOption) (*ConcatResponse, error)
	Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*Response, error)
}

type serviceClientClient struct {
	cc *grpc.ClientConn
}

func NewServiceClientClient(cc *grpc.ClientConn) ServiceClientClient {
	return &serviceClientClient{cc}
}

func (c *serviceClientClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/addservice.ServiceClient/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClientClient) Concat(ctx context.Context, in *ConcatRequest, opts ...grpc.CallOption) (*ConcatResponse, error) {
	out := new(ConcatResponse)
	err := c.cc.Invoke(ctx, "/addservice.ServiceClient/Concat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClientClient) Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/addservice.ServiceClient/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceClientServer is the server API for ServiceClient service.
type ServiceClientServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Concat(context.Context, *ConcatRequest) (*ConcatResponse, error)
	Test(context.Context, *TestRequest) (*Response, error)
}

func RegisterServiceClientServer(s *grpc.Server, srv ServiceClientServer) {
	s.RegisterService(&_ServiceClient_serviceDesc, srv)
}

func _ServiceClient_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceClientServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addservice.ServiceClient/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceClientServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceClient_Concat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConcatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceClientServer).Concat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addservice.ServiceClient/Concat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceClientServer).Concat(ctx, req.(*ConcatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceClient_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceClientServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addservice.ServiceClient/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceClientServer).Test(ctx, req.(*TestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "addservice.ServiceClient",
	HandlerType: (*ServiceClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _ServiceClient_Sum_Handler,
		},
		{
			MethodName: "Concat",
			Handler:    _ServiceClient_Concat_Handler,
		},
		{
			MethodName: "Test",
			Handler:    _ServiceClient_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}

// ServiceServerClient is the client API for ServiceServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceServerClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Concat(ctx context.Context, in *ConcatRequest, opts ...grpc.CallOption) (*ConcatResponse, error)
	Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*Response, error)
}

type serviceServerClient struct {
	cc *grpc.ClientConn
}

func NewServiceServerClient(cc *grpc.ClientConn) ServiceServerClient {
	return &serviceServerClient{cc}
}

func (c *serviceServerClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/addservice.ServiceServer/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceServerClient) Concat(ctx context.Context, in *ConcatRequest, opts ...grpc.CallOption) (*ConcatResponse, error) {
	out := new(ConcatResponse)
	err := c.cc.Invoke(ctx, "/addservice.ServiceServer/Concat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceServerClient) Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/addservice.ServiceServer/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServerServer is the server API for ServiceServer service.
type ServiceServerServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Concat(context.Context, *ConcatRequest) (*ConcatResponse, error)
	Test(context.Context, *TestRequest) (*Response, error)
}

func RegisterServiceServerServer(s *grpc.Server, srv ServiceServerServer) {
	s.RegisterService(&_ServiceServer_serviceDesc, srv)
}

func _ServiceServer_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServerServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addservice.ServiceServer/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServerServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceServer_Concat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConcatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServerServer).Concat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addservice.ServiceServer/Concat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServerServer).Concat(ctx, req.(*ConcatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceServer_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServerServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addservice.ServiceServer/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServerServer).Test(ctx, req.(*TestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "addservice.ServiceServer",
	HandlerType: (*ServiceServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _ServiceServer_Sum_Handler,
		},
		{
			MethodName: "Concat",
			Handler:    _ServiceServer_Concat_Handler,
		},
		{
			MethodName: "Test",
			Handler:    _ServiceServer_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_test_3bdd0f9ca33228e5) }

var fileDescriptor_test_3bdd0f9ca33228e5 = []byte{
	// 830 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x66, 0xe2, 0x24, 0x4d, 0x4e, 0x7e, 0x5a, 0x86, 0xd2, 0x9d, 0xf5, 0xee, 0x16, 0xcb, 0x88,
	0x95, 0x51, 0x21, 0x42, 0x93, 0xc8, 0x2d, 0x15, 0x12, 0x4a, 0x02, 0x16, 0x16, 0x0a, 0x95, 0x66,
	0x5c, 0x89, 0x5b, 0x93, 0x5a, 0xa8, 0xa2, 0x8d, 0x4b, 0xec, 0x54, 0xea, 0x03, 0xf2, 0x0a, 0x3c,
	0x0f, 0x9a, 0x33, 0x76, 0xec, 0x34, 0x0e, 0x01, 0x7a, 0xc5, 0x55, 0xce, 0xcf, 0xf7, 0x9d, 0x3f,
	0x4f, 0xe6, 0x0c, 0x40, 0x1a, 0x25, 0xe9, 0xe0, 0x61, 0x19, 0xa7, 0x31, 0x85, 0xf0, 0xe6, 0x26,
	0x89, 0x96, 0x8f, 0xb7, 0xf3, 0xc8, 0x3e, 0x83, 0xde, 0x34, 0x5e, 0xcc, 0xc3, 0x54, 0x44, 0xbf,
	0xaf, 0xa2, 0x24, 0xa5, 0x5d, 0x20, 0x63, 0x46, 0x2c, 0xe2, 0xb4, 0x05, 0x19, 0x2b, 0x6d, 0xc2,
	0x6a, 0x5a, 0x9b, 0xd8, 0x02, 0xfa, 0x39, 0x38, 0x79, 0x88, 0x17, 0x49, 0x44, 0x29, 0xd4, 0xa7,
	0xf1, 0x4d, 0x84, 0x04, 0x43, 0xa0, 0x4c, 0x19, 0x1c, 0xcc, 0xa2, 0x24, 0x09, 0x7f, 0x8d, 0x32,
	0x66, 0xae, 0x2a, 0xf4, 0x77, 0x61, 0x1a, 0x32, 0x03, 0xcd, 0x28, 0xdb, 0x7f, 0xf6, 0xc0, 0xf0,
	0xe2, 0x58, 0xf9, 0x7e, 0x0a, 0xef, 0xa3, 0x2c, 0x35, 0xca, 0xf4, 0x08, 0x8c, 0x71, 0x16, 0xc5,
	0x10, 0x4a, 0x54, 0x16, 0x6f, 0xc8, 0x31, 0x40, 0x4d, 0x28, 0x11, 0x2d, 0xee, 0x88, 0xd5, 0x2d,
	0xe2, 0x10, 0xa1, 0x44, 0x15, 0xe9, 0xda, 0x1f, 0x72, 0xd6, 0xb0, 0x88, 0xd3, 0x13, 0x28, 0x6b,
	0x9b, 0x3b, 0x62, 0x4d, 0x8b, 0x38, 0x75, 0x81, 0xb2, 0xee, 0xed, 0xc0, 0x22, 0x4e, 0x4b, 0x90,
	0x89, 0xaa, 0x5a, 0xa6, 0xe1, 0xd2, 0x5f, 0xa4, 0xac, 0x85, 0xf9, 0x72, 0x95, 0x7e, 0xae, 0x3d,
	0x5e, 0x1c, 0xb3, 0xb6, 0x45, 0x9c, 0x0e, 0x3f, 0x1c, 0x14, 0x03, 0x1c, 0x78, 0x71, 0x2c, 0x72,
	0x3f, 0xfd, 0x02, 0x5a, 0x99, 0xc8, 0x19, 0x20, 0xf6, 0xe8, 0x19, 0x96, 0x8b, 0x35, 0x82, 0x1e,
	0x43, 0x63, 0xf2, 0x94, 0x46, 0x09, 0xeb, 0x58, 0xc4, 0xe9, 0x0a, 0xad, 0xa8, 0x52, 0x65, 0xba,
	0x4c, 0x58, 0xd7, 0x32, 0xd4, 0x20, 0x94, 0xac, 0x6c, 0xfe, 0x22, 0x4d, 0x58, 0xcf, 0x32, 0xd4,
	0x98, 0x95, 0x4c, 0x4f, 0xa0, 0xe9, 0x2f, 0x52, 0x77, 0x24, 0x59, 0x1f, 0xad, 0x99, 0xa6, 0xb0,
	0xde, 0x90, 0x4b, 0x76, 0x68, 0x19, 0x4e, 0x4d, 0xa0, 0x8c, 0x36, 0x85, 0x3c, 0xb2, 0x0c, 0x87,
	0x08, 0x94, 0xe9, 0xa7, 0x50, 0xf7, 0xe2, 0x38, 0x61, 0x1f, 0x5a, 0x46, 0x55, 0x4f, 0xe8, 0xa4,
	0x67, 0xeb, 0x86, 0x12, 0x46, 0xab, 0x81, 0x6b, 0x00, 0x7d, 0x0f, 0x0d, 0xf5, 0xcb, 0xd9, 0x47,
	0x88, 0xdc, 0x6e, 0x5d, 0xbb, 0xe9, 0x00, 0xda, 0x39, 0x87, 0xb3, 0xe3, 0x1d, 0xd8, 0x02, 0x42,
	0xbf, 0x84, 0xfa, 0x4c, 0x72, 0x9f, 0x7d, 0x8c, 0xd0, 0xd7, 0xcf, 0xa0, 0x03, 0xe5, 0xfb, 0x7e,
	0x91, 0x2e, 0x9f, 0x04, 0xc2, 0xe8, 0x10, 0x9a, 0xea, 0x77, 0xc8, 0xd9, 0x09, 0x12, 0xde, 0x54,
	0x11, 0x86, 0x5c, 0x53, 0x32, 0x68, 0x4e, 0x72, 0x47, 0xec, 0xd5, 0x6e, 0x92, 0x3b, 0x2a, 0x91,
	0xdc, 0x11, 0x75, 0xe1, 0x60, 0x26, 0x39, 0x1e, 0x36, 0x86, 0xac, 0xb7, 0x15, 0xac, 0xeb, 0x75,
	0xae, 0x1c, 0xbc, 0xe6, 0xb9, 0x23, 0xf6, 0xfa, 0x6f, 0x78, 0x79, 0xba, 0x1c, 0x8c, 0x83, 0xf0,
	0xb9, 0xcf, 0xcc, 0x1d, 0x83, 0xf0, 0x8b, 0x41, 0xf8, 0xdc, 0xa7, 0x5f, 0x41, 0x63, 0x26, 0xb9,
	0x0c, 0xd8, 0x1b, 0xc4, 0x9b, 0x15, 0x49, 0x64, 0xa0, 0x09, 0x1a, 0x98, 0x4d, 0x41, 0x06, 0x9c,
	0xbd, 0xdd, 0x39, 0x05, 0x19, 0x94, 0x46, 0x27, 0x03, 0x4e, 0xbf, 0x81, 0xb6, 0x92, 0xd2, 0x70,
	0x29, 0x03, 0xf6, 0x0e, 0x79, 0xa7, 0x55, 0x3c, 0x04, 0x68, 0x6a, 0x41, 0xa0, 0xdf, 0x02, 0xac,
	0x15, 0xce, 0x4e, 0x91, 0xfe, 0xc9, 0x4e, 0x7a, 0x96, 0xba, 0x44, 0x31, 0xcf, 0x31, 0xbd, 0x6e,
	0x5c, 0xdd, 0x06, 0xbf, 0x45, 0x4f, 0xd9, 0x25, 0xa2, 0x44, 0xf5, 0x27, 0x7b, 0x0c, 0xef, 0x56,
	0xf9, 0x2d, 0xa2, 0x95, 0xcb, 0xda, 0x05, 0x31, 0xbf, 0x86, 0x4e, 0xe9, 0x24, 0xec, 0xa3, 0x36,
	0x2a, 0xa8, 0xd9, 0x07, 0xfa, 0x57, 0x59, 0x2f, 0xa1, 0x5b, 0x3e, 0x14, 0xfb, 0xb8, 0xbd, 0x2a,
	0xee, 0x3f, 0xcc, 0x5b, 0x2f, 0x73, 0xd5, 0x98, 0xfc, 0x8a, 0x31, 0x19, 0xfb, 0x0a, 0xf6, 0xf5,
	0x07, 0x0a, 0x76, 0xa5, 0xfc, 0xac, 0xcc, 0xac, 0xb8, 0x1f, 0x4a, 0xa1, 0x7e, 0xc4, 0xb1, 0xe5,
	0x5f, 0xb1, 0x22, 0xd6, 0xfb, 0xcd, 0x58, 0x15, 0x37, 0x48, 0x11, 0x6c, 0x06, 0xfd, 0xcd, 0x53,
	0xf5, 0xb2, 0xda, 0xae, 0xe0, 0xf0, 0xd9, 0x29, 0x7b, 0x59, 0x7d, 0xb6, 0x8d, 0xf7, 0x2b, 0xdf,
	0xb5, 0x50, 0x0d, 0xb5, 0x50, 0x2f, 0xa0, 0xf5, 0xdf, 0x56, 0xa9, 0xfd, 0x33, 0x80, 0x5c, 0xdd,
	0x6f, 0x2d, 0x6d, 0x63, 0x2b, 0x07, 0x3d, 0x05, 0xe2, 0xe1, 0xc2, 0xac, 0xaa, 0x97, 0x78, 0xb4,
	0x0f, 0xb5, 0xe9, 0x1c, 0xf7, 0x67, 0x43, 0xd4, 0xa6, 0x73, 0xfb, 0x0a, 0x3a, 0x18, 0xf9, 0xc5,
	0x1b, 0xde, 0xc8, 0x36, 0xfc, 0x0f, 0xd0, 0x09, 0xa2, 0x64, 0xdf, 0x03, 0x03, 0x6b, 0x7d, 0x57,
	0xd4, 0xba, 0xf5, 0xad, 0x88, 0xc7, 0xff, 0x20, 0xd0, 0x93, 0xda, 0x34, 0xbd, 0xbb, 0x8d, 0x16,
	0x29, 0xbd, 0x00, 0x43, 0xae, 0xee, 0xe9, 0x49, 0x19, 0x5c, 0xcc, 0xc5, 0x7c, 0xb5, 0x65, 0xd7,
	0x5d, 0xd9, 0x1f, 0xd0, 0x31, 0x34, 0xf5, 0x5b, 0x86, 0x6e, 0xdc, 0xa3, 0x1b, 0x8f, 0x21, 0xd3,
	0xac, 0x72, 0xad, 0x43, 0x9c, 0x43, 0x5d, 0x35, 0x46, 0x37, 0xb2, 0x94, 0x5a, 0x35, 0x8f, 0xcb,
	0x8e, 0x82, 0x58, 0xee, 0x43, 0xfd, 0x44, 0xcb, 0xff, 0x67, 0x1f, 0xbf, 0x34, 0xf1, 0x3d, 0x39,
	0xfc, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x07, 0x11, 0x0b, 0x5d, 0x0a, 0x00, 0x00,
}
